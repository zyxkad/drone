// Package ubx contains definitions for UBX-XXX-YYY messages and functions to decode and encode them.
//
// Definitions of message and bit field types, as well as the unit tests are generated by the program msggen,
// also found in this directory, from an XML file constructed from a text dump of the PDF manual, with some
// hand-parsing of the bitfield defining images in there.
//
// The the generating program, the XML file messages.xml and templates are provided here, but not required
// for operation or building the package.
//
// The UBX message protocol has clearly evolved under the hands of many interns who lost track of any
// underlying design principles that may have been present at its inception. The lowest layer is a
// framing protocol with a prefix, a type code (message class and message id), a length and a trailing
// checksum. However the class and ID do not uniquely determine the message type.  For most messages
// the length provides sufficient information as to what the incoming type should be, but some messages contain
// variable parts, some contain a field that says how many elements of the variable part there are but
// some don't. One contains 2 variable parts, one has a variable and an optional part which may add up
// to the same number, and some messages have some sort of further subtype encoded in the first field
// of the message. Some messages have a further 'version' field but thankfully that seems to be unused
// as of yet. The file mkmsg.go contains handcrafted functions called by decode to construct a handful of edge cases.
//
// At Daedalean we have the convention to suffix numeric variable names with an encoding of the units.
// This package follows that convention even if go lint may whinge.  (When go lint whinges about repeated
// string literals that havent been defined as a constant somewhere it is also misguided.  "default" is
// a much better string constant than having const DEFAULT = "default" somewhere. I don't care if it's
// the official idiom, it is wrong.)
//
//  Source:
// 		u-blox 8 / u-blox M8 Receiver description (UBX-13003221)  R21 (dc62240) 25 September 2020
// 		https://www.u-blox.com/sites/default/files/products/documents/u-blox8-M8_ReceiverDescrProtSpec_%28UBX-13003221%29.pdf
//
package ubx
