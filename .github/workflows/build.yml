
name: Create tagged release
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Action Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      -
        name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache-dependency-path: ./go.sum
      -
        name: Generate
        run: go generate ./...
      -
        name: Test
        run: go test -v ./...

  create_release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      -
        name: Output TAG
        id: tag
        run: |
          export RELEASE_VERSION="${GITHUB_REF#refs/*/}"
          echo "tag=${RELEASE_VERSION}"
          echo "tag=${RELEASE_VERSION}" >> "$GITHUB_OUTPUT"
      -
        name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - create_release
    steps:
      -
        name: Action Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      -
        name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache-dependency-path: ./go.sum
      -
        name: Generate
        run: go generate ./...
      -
        name: Build
        run: |
          bash ./scripts/build.sh ./cmd/drone_web_controller
      -
        name: Upload Release Assets
        uses: zyxkad/upload-release-asset-dir@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_dir: ./output
